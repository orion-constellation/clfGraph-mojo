name: Python CI
on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    name: Lint and Test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          ~/.venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: 1.5.1  # Specify your desired Poetry version

    - name: Install dependencies
      run: poetry install

    - name: Run isort
      run: poetry run isort .

    - name: Run black
      run: poetry run black --check .

    - name: Run pylint
      run: poetry run pylint $(find . -name "*.py" | grep -v migrations)

    - name: Check for unused libraries with vulture
      run: poetry run vulture .

    - name: Build the project
      run: poetry build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: dist/

    - name: Run tests with coverage
      run: poetry run pytest --cov=.

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml